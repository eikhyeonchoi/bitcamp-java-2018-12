// 2단계: 클라이언트의 연결을 승인한다.

// 3단계: 클라이언트와 서버 간에 간단한 문자열 데이터를 주고 받는다.

// 4단계: 클라이언트와 서버 간에 인스턴스를 주고 받는다.

// 5단계: 클라이언트가 보낸 add, list, quit 명령을 받아 처리한다.

// 6단계: 클라이언트가 보낸 회원 관리 명령어(/member/*)를 처리한다.

// 7단계: 클라이언트의 연결을 승인한다.
// 7단계: 클라이언트에서 요청한 /board/* 명령을 처리한다.
// 7단계: 클라이언트에서 요청한 /member/* 명령을 처리한다.
// 7단계: 클라이언트에서 요청한 /lesson/* 명령을 처리한다.

// 8단계: 클라이언트 요청을 처리하는 클래스에 대해 리팩토링 수행
// 클라이언트의 요청을 처리하는 클래스라는 의미로 
// 클래스명을 *Service로 변경한다.

// 9단계: 클라이언트 요청을 처리하는 서비스 클래스를 별도의 패키지로 분류하기

// 10단계: 데이터를 파일로 관리한다.

// 11단계: 서비스 클래스의 일반화(상속)를 수행한다.
// 11단계: AbstractService 상속 받기