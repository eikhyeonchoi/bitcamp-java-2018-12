<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

	<resultMap type="board" id="boardMap">
		<id column="board_id" property="no" />
		<result column="created_date" property="createdDate" />
		<result column="view_count" property="viewCount" />
	</resultMap>

	<select id="select1" resultMap="boardMap">
		select * from x_board
	</select>

  <!-- mybatis에서 in-parameter 지정하기
        1) in-parameter의 값을 담고 있는 객체의 타입을 지정한다
            ==> parameterType="클래스명 또는 별명"
         2) SQL문에 in-parameter를 지정한다
             ==> #{프로퍼티명} 
          정수 값을 지정할 때 _int(int타입), int(java.lang.Integer) 둘중 암거나 하나
          파라미터 타입이 원시타입 이거나 String이나 wrapper 클래스인 경우
          프로퍼티명은 아무거나 상관없다   
             -->
	<select id="select2" resultMap="boardMap" parameterType="int">
		select * from x_board where board_id = #{amuguna}
	</select>
	
	<select id="select3" resultMap="boardMap" parameterType="String">
		select * from x_board where title like concat('%',#{value},'%')
	</select>
	
	<!-- 파라미터 타입이 일반 클래스일 때 in-parameter의 이름은 프로퍼티 이름으로 -->
	<insert id="insert1" parameterType="board">
	  insert into x_board(title,contents)
	  values(#{title}, #{contents})
	</insert>
	
	<!-- 파라미터 타입이 map인경우 in-parameter를 지정할때 #{key}로 사용하면된다 -->
	<insert id="insert2" parameterType="map">
	  insert into x_board(title,contents)
	  values(#{title}, #{contents})
	</insert>
	
	<update id="update" parameterType="board">
	 update x_board 
	 set title=#{title}, contents=#{contents}
	 where board_id=#{no}
	</update>
	
	<!-- 파라미터 타입일 땐 #{}에 아무 이름이나 넣어도됨 +String Wrapper -->
	<delete id="delete" parameterType="int">
	delete from x_board
	where board_id=#{value}
	</delete>
	
	<!-- inser 실행 후 PK리턴받기
	파라미터로 전달된 객체를 통해 리턴 받는다 -->
	 <insert id="insert3" parameterType="board"
	 useGeneratedKeys="true" keyColumn="board_id" keyProperty="no">
    insert into x_board(title,contents)
    values(#{title}, #{contents})
  </insert>

</mapper>


